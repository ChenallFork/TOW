#!/bin/sh

alias elog='logger -t IPT -s'
alias ping='/bin/ping'
use_gfwlist=1
ipset_gfwlist_force_recreate=0
ssh_server="ssh.server.org"
ss_server="pp.shadowsocks.com"

# Loading ipset modules
if [ $(lsmod | grep "ipt_set" | wc -l) -eq 0 ]; then
    elog "loading ipset modules"
    for module in ip_set ip_set_iptreemap ipt_set
    do
        insmod $module
    done
fi

ipt() {
    [ $# -lt 1 ] && exit 1

    #REDIRECT PORT
    case "$1" in
    ss)
        RSPORT=8099
        ;;
    redir)
        RSPORT=7272
        ;;
    gae)
        RSPORT=8096
        RSPORTS=8097
        ;;
    ssh)
        RSPORT=8098
        ;;
    off)
        elog "iptables for proxy were clear."
        exit 1
        ;;
    *)
        echo "Usage: $0 {ss|redir|gae|ssh|off}"
        exit 1
    esac

    #Define Ports
    DEST="`nvram get lan_ipaddr`:${RSPORT}"
    [ "$1" = "gae" ] && DESTS="`nvram get lan_ipaddr`:${RSPORTS}"

    # redirect all subnet or some ips only
    if [ $# -eq 1 ]; then
        SOUCLI="-s `nvram get lan_ipaddr`/`nvram get lan_netmask`"
    else
        BIP="$(echo `nvram get lan_ipaddr` | cut -d. -f1-3)"
        SOUCLI="-m iprange --src-range ${BIP}.$2-${BIP}.$3"
    fi

    # Mode select paramete
    [ "$1" = "redir" ] && REDIRECTOR="SHADOWSOCKS" || REDIRECTOR="REDSOCKS"
    [ "$1" = "ssh" ] && \
    serverdomain="$ssh_server" || serverdomain="$ss_server"

    # Create new chain
    iptables -t nat -N $REDIRECTOR

    # Ignore your proxy server's addresses
    # It's very IMPORTANT, just be careful.
    local remoteip="`ping -q -w1 $serverdomain | grep PING | sed -e "s/).*//" | sed -e "s/.*(//"`"

    # Do not redirect traffic to the followign address ranges
    iptables -t nat -A $REDIRECTOR -d 0.0.0.0/8 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 10.0.0.0/8 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 127.0.0.0/8 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 169.254.0.0/16 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 172.16.0.0/12 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 192.168.0.0/16 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 224.0.0.0/4 -j RETURN
    iptables -t nat -A $REDIRECTOR -d 240.0.0.0/4 -j RETURN
    iptables -t nat -A $REDIRECTOR -d "$remoteip" -j RETURN

    if [ $use_gfwlist -eq 0 ]; then
    # Anything else should be redirected to $REDIRECTOR's local port
        iptables -t nat -A $REDIRECTOR -p tcp $SOUCLI -j DNAT --to-destination $DEST
    fi

    #use gfwlist
    if [ $use_gfwlist -eq 1 ]; then
        checkgfwlist=$(ipset -L gfwlist 2> /dev/null | wc -l)
        [ $checkgfwlist -eq 0 ] && ipset -N gfwlist iphash
        [ $ipset_gfwlist_force_recreate -eq 1 ] && {
            elog "Force gfwlist recreating..."
            ipset -F gfwlist
            ipset -X gfwlist
            sleep 3
            ipset -N ipset -N gfwlist iphash
            elog "ipset gfwlist recreate success."
        }
        if [ "$1" = "gae" ]; then
            iptables -t nat -A $REDIRECTOR -p tcp $SOUCLI --dport 80 -m set --set gfwlist dst -j DNAT --to-destination $DEST
            iptables -t nat -A $REDIRECTOR -p tcp $SOUCLI --dport 443 -m set --set gfwlist dst -j DNAT --to-destination $DESTS
        else
            iptables -t nat -A $REDIRECTOR -p tcp $SOUCLI -m set --set gfwlist dst -j DNAT --to-destination $DEST
        fi
    fi

    # Apply the rules
    iptables -t nat -A PREROUTING -i `nvram get lan_ifname` -p tcp -j $REDIRECTOR
}

#iptstart
ipt redir 8 50
#iptend
