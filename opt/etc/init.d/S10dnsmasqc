#!/bin/sh
alias wget=/opt/bin/wget
alias base64=/opt/bin/base64
alias cat=/opt/bin/cat
alias elog="logger -t DNSMASQ_RENEW -s"

SHR=0

# Tunlr DNS updater for dnsmasq. 2013, Alexander Ryzhov
# Adapted For asuswrt-merlin firmware.
tunlr() {
    echo "Tunlr DNS updater started"

    local DNSMASQ_CONF='/opt/etc/dnsmasq/custom/tunlr.cfg'
    local DOMAINS=$(cat /opt/etc/dnsmasq/tunlr/domains.txt)
    local IPS=$(wget -q -O - \
        "http://tunlr.net/tunapi.php?action=getdns&version=1&format=json" \
        | sed "s/\"dns.\"://g" | sed "s/[{}]//g" | sed "s/,/\ /g" |sed "s/\"//g")
    if [ -z "$IPS" ] || [ -n "$(echo $IPS | sed 's/[0-9\.\ ]//g')" ] ; then
        echo "Tunlr DNS addresses not retrieved, exiting."
        exit
    fi
    echo -n > $DNSMASQ_CONF
    echo "# Tunlr DNS updater for dnsmasq" >> $DNSMASQ_CONF
    for domain in $DOMAINS
    do
        for dns in $IPS
        do
            echo "server=/${domain}/${dns}" >> $DNSMASQ_CONF
        done
    done
    SHR=1
    echo 'done.'
}

gfwlist() {
    cd /tmp
    wget -q --no-check-certificate https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt -O gfwlist.txt
    base64 -d gfwlist.txt > gfwlist.dec     #Base64 decode
    sed -i '1,20d' gfwlist.dec              #remove Restricted site
    grep '^@@' gfwlist.dec > gfwlist.direct #direct connect
    grep '^||' gfwlist.dec > gfwlist.p1     #pattern 1:start with "||"
    grep '^\.' gfwlist.dec > gfwlist.p2     #pattern 2:start with "."
    grep '^|[^|]' gfwlist.dec > gfwlist.p3  #pattern 3:start with single "|"
    grep -v '^|\|^$\|^@\|^\.\|^\[\|^!' gfwlist.dec > gfwlist.p4 #pattern 4:others
    echo 'converting gfwlist to domain list...'
    sed -i 's/^||//g' gfwlist.p1    #remove the leading "||"
    sed -i 's/\/.*$//g' gfwlist.p1  #remove anything after "/", including "/"
    sed -i 's/\^//g' gfwlist.p1     #remove "^" if any, due to gfwlist's flawed lines
    sed -i 's/^\.//g' gfwlist.p2    #remove the leading "."
    sed -i 's/^google[\.\*].*//g' gfwlist.p2        #remove lines start with google. or google*
    sed -i 's/\/.*//g' gfwlist.p2   #remove anything after "/", including "/"
    sed -i 's/|http:\/\///g' gfwlist.p3     #remove prefix
    sed -i 's/|https:\/\///g' gfwlist.p3    #remove prefix
    sed -i 's/\/.*$//g' gfwlist.p3  #remove .....
    sed -i 's/^\*\.//g' gfwlist.p3
    grep '\.' gfwlist.p4 > gfwlist.tmp      #remove lines contain no domain
    mv gfwlist.tmp gfwlist.p4
    sed -i 's/\/.*$//g' gfwlist.p4  #remove....
    sed -i 's/^google.*$//g' gfwlist.p4     #remove lines start with google
    grep -v '\.wikipedia\.org.*' gfwlist.p4 > gfwlist.tmp   #remove wikipedia lines
    mv gfwlist.tmp gfwlist.p4
    cp gfwlist.p1 domainlist.tmp
    echo '
    '>> domainlist.tmp
    cat -s gfwlist.p2 >> domainlist.tmp
    echo '
    '>> domainlist.tmp
    cat -s gfwlist.p3 >> domainlist.tmp
    echo '
    '>> domainlist.tmp
    cat -s gfwlist.p4 >> domainlist.tmp
    sort domainlist.tmp | uniq > domainlist.txt
    sed -i '/^[[:space:]]*$/d' domainlist.txt       #delete blank line
    grep '\*' domainlist.txt > domainlist.special
    grep '^|' domainlist.txt >> domainlist.special
    sed -i '/\*\|^|/d' domainlist.txt
    sed -i -e "s/.*/ipset=\/&\/gfwlist/" domainlist.txt
    rm domainlist.tmp
    rm domainlist.special
    rm gfwlist.*
    mv -f /tmp/domainlist.txt /opt/etc/dnsmasq/custom/gfwlist.cfg
    #lanternlist
    local TMPLISTFILE="/tmp/lanternlist.txt"
    local gfwlistFILE="/opt/etc/dnsmasq/custom/gfwlist.cfg"
    wget -q --no-check-certificate https://raw.github.com/getlantern/lantern-proxied-sites-lists/master/china/autoproxy/list.txt -O $TMPLISTFILE
    echo 'Converting lanternlist to domain list...'
    sed -i '1,10d' $TMPLISTFILE
    sed -i "s/.*/ipset=\/&\/gfwlist/" $TMPLISTFILE
    [ -e $gfwlistFILE ] && cat $TMPLISTFILE >> $gfwlistFILE
    sort $gfwlistFILE | uniq > $TMPLISTFILE
    mv -f $TMPLISTFILE $gfwlistFILE
    sed -i '1s/^.*$/#### GFWList Domain for IPSET ####/' $gfwlistFILE
    echo 'done.'
}

whitelist() {
    cd /tmp
    wget -q --no-check-certificate https://github.com/n0wa11/gfw_whitelist/raw/master/whitelist.pac -O whitelist.txt
    sed -i 's/ //g' whitelist.txt        #remove all space
    grep '^"\.' whitelist.txt > whitelist.tmp #get all domain line
    echo 'converting whitelist to domain list...'
    sed -i 's/^"\.//g' whitelist.tmp   #remove the leading ""."
    sed -i 's/\/.*$//g' whitelist.tmp  #remove anything after "/", including "/"
    sed -i 's/\"//g' whitelist.tmp     #remove """ if any, due to gfwlist's flawed lines
    sed -i 's/\,//g' whitelist.tmp     #remove "," if any, due to gfwlist's flawed lines
    sort whitelist.tmp | uniq > dnswhitelist.txt
    sed -i -e "s/.*/ipset=\/&\/whitelist/" dnswhitelist.txt
    rm whitelist.*
    mv -f /tmp/dnswhitelist.txt /opt/etc/dnsmasq/custom/whitelist.cfg
    #pandalist
    local TMPLISTFILE="/tmp/panda_list.txt"
    local whitelistFILE="/opt/etc/dnsmasq/custom/whitelist.cfg"
    wget -q --no-check-certificate -O $TMPLISTFILE https://www.pandafan.org/pac/domain_list.txt
    echo 'Converting pandalist to domain list...'
    sed -i 's/\[//g' $TMPLISTFILE
    sed -i 's/\]//g' $TMPLISTFILE
    sed -i 's/, /\n/g' $TMPLISTFILE
    sed -i "s/'//g" $TMPLISTFILE
    sed -i "s/.*/ipset=\/&\/whitelist/" $TMPLISTFILE
    [ -e $whitelistFILE ] && cat $TMPLISTFILE >> $whitelistFILE
    sort $whitelistFILE | uniq > $TMPLISTFILE
    mv -f $TMPLISTFILE $whitelistFILE
    sed -i '1 i\###China Domain WhiteList for IPSET###' $whitelistFILE
    [ -e $TMPLISTFILE ] && rm -f $TMPLISTFILE
    echo 'done.'
}

tunlr
gfwlist
#whitelist

if [ $SHR -eq 1 ]
    then
        service dnsmasq restart
        elog "DNSMASQ restart success, new Configs and Hosts working now..."
    else
        elog "DNSMASQ update failed, old Configs and Hosts working now..."
fi